buildscript {
    ext {
        queryDslVersion = "4.4.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.template.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    compileOnly 'org.projectlombok:lombok:1.18.12'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.nimbusds:nimbus-jose-jwt:2.10.1'
    implementation 'commons-codec:commons-codec'
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'

    implementation 'javax.mail:mail:1.4.7'
    implementation 'javax.xml.bind:jaxb-api'
//    implementation 'mysql:mysql-connector-java:8.0.23'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'net.sf.json-lib:json-lib:2.4:jdk15'

    implementation 'org.postgresql:postgresql:42.3.3'

    implementation 'org.hashids:hashids:1.0.3'

    implementation 'com.google.code.findbugs:jsr305:3.0.0'

    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.6.RELEASE'

    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    implementation 'org.apache.httpcomponents:httpclient:4.5.12'
    implementation 'org.modelmapper:modelmapper:2.3.6'
    implementation 'commons-fileupload:commons-fileupload:1.2.1'

    compileOnly 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.44'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.21'

    // Querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

    //JUnit5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'

}

//개발 환경에서 생성된 Q파일들을 사용할 수 있도록 generated 디렉토리를 sourceSet에 추가
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

test {
    useJUnitPlatform()
}

task explodedWar(type: Copy) {
    into "$buildDir/exploded"
    with war
}